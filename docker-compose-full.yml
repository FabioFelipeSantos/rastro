version: "3.8"

services:
    postgres:
        image: postgres:latest
        container_name: twitter-postgres
        env_file:
            - ./.env
        ports:
            - "${POSTGRES_PORT}:5432"
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - twitter_db_volume:/var/lib/postgresql/data
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5

    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: twitter-app
        ports:
            - "80:80"
        depends_on:
            postgres:
                condition: service_healthy
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PORT=${POSTGRES_PORT}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB_TEST=${POSTGRES_DB_TEST}
        volumes:
            - ./server/.env:/app/server/.env:ro
        restart: always

volumes:
    twitter_db_volume:
        name: twitter_db_volume
